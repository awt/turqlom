#!/usr/bin/env ruby

lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'trollop'
require 'pp'
require 'turqlom'

p = Trollop::Parser.new do
  opt :config, "Specify path to config file", :type => :string
  opt "disable-bm", "Disable calls to BM api", :type => :boolean
  opt :environment, "Set environment to production or development", :type => :string
  opt :regenerate, "Regenerate all posts", :type => :boolean
end
opts = Trollop::with_standard_exception_handling p do
  #raise Trollop::HelpNeeded if ARGV.empty?  #show help screen
  p.parse ARGV
end
#Trollop::die :api_key, "required" if opts[:api_key].nil?
#Trollop::die :account_name, "required" if opts[:account_name].nil?
#Trollop::die :organization, "required" if opts[:organization].nil?
#Trollop::die :csv_path, "required" if opts[:csv_path].nil?


if opts[:environment]
  Turqlom.env = opts[:environment]
elsif ENV['TURQLOM_ENVIRONMENT']
  Turqlom.env = ENV['TURQLOM_ENVIRONMENT']
end

if !opts[:config].nil? 
  Turqlom::SETTINGS = Turqlom::Settings.new(opts[:config])
else
  Turqlom::SETTINGS = Turqlom::Settings.new('/usr/local/etc/init.d/turqlom.yml')
end

if opts["disable-bm"]
  Turqlom::SETTINGS["disable-bm"] = true
end


Turqlom::BM_URI = Turqlom::SETTINGS.bm_uri

if opts[:regenerate]
  Turqlom::Blog.regenerate
else
  Turqlom::Blog.import
end

